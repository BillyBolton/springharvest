name: Build, Test, and Up-Version
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        submodule:
          - ":examples:examples-crud:examples-crud-library"
          - ":examples:examples-search:examples-search-library"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        run: ./gradlew ${{ matrix.submodule }}:build

  test:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        submodule:
          [
            examples:examples-crud:examples-crud-library,
            :examples:examples-search:examples-search-library,
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Tests
        run: ./gradlew ${{ matrix.submodule }}:test
      - name: CodeCov Reporting
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true

  publish:
    needs: [build, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Get Current Version
        id: get_version
        run: |
          CURRENT_VERSION=$(grep "version = " build.gradle | sed "s/version = '\(.*\)'/\1/")
          echo "Current version is $CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Update Version
        run: |
          # Logic to calculate new version based on the current version
          INCREMENTED_VERSION=$(echo $CURRENT_VERSION | awk -F'.' '{$NF++; print $1"."$2"."$NF}')
          NEW_VERSION="${CURRENT_VERSION}-SNAPSHOT"  # Replace with your own logic
          echo "New Version: $NEW_VERSION"
          CURRENT_VERSION=$(grep "version = " build.gradle | sed "s/version = '\(.*\)'/\1/")

          # Update the build.gradle file with the new version
          sed -i "s/version = '$CURRENT_VERSION'/version = '$NEW_VERSION'/" build.gradle

      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add build.gradle
          git commit -m "Bump version to $NEW_VERSION"
          git push
