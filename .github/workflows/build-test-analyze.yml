name: Build and Test

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        submodule:
          [
            ":codegen",
            ":components:components-crud",
            ":examples:books-catalogue",
            ":examples:books-catalogue-codegen",
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: 21
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Conditional Build or Test
        id: test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
        run: |
          if [[ "${{ matrix.submodule }}" == ":examples:books-catalogue" ]] || [[ "${{ matrix.submodule }}" == ":examples:books-catalogue-codegen" ]]; then
            ./gradlew ${{ matrix.submodule }}:build
          else
            ./gradlew ${{ matrix.submodule }}:test
          fi

      - name: Generate Test Coverate Report
        id: generate-test-coverage-report
        if: success() || failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
        run: |
          ./gradlew ${{ matrix.submodule }}:jacocoTestReport

      - name: Publish Test Report Annotations
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          check_name: JUnit Test Report Annotations
          report_paths: "**/build/test-results/test/TEST-*.xml"

  publish-test-coverage-reports:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: 17
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Aggregate Code Coverage
        id: test-code-coverage-report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
        run: |
          ./gradlew testCodeCoverageReport

      - name: Publish Test Report
        id: sonar-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar
