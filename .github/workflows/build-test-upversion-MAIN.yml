name: Build, Test, and Up-Version
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        submodule:
          - ":examples:examples-crud:examples-crud-library"
          - ":examples:examples-search:examples-search-library"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew ${{ matrix.submodule }}:build

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Get Current Version
        id: get_version
        run: |
          CURRENT_VERSION=$(grep "APPLICATION_VERSION" env.properties | cut -d'=' -f2)
          echo "Current version is $CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Update Version
        run: |
          # Logic to calculate new version based on the current version
          run: |
          # Check if version has '-SNAPSHOT'
          if [[ "$CURRENT_VERSION" == *"-SNAPSHOT" ]]; then
            # Increment $3 if it has '-SNAPSHOT'
            INCREMENTED_VERSION=$(echo $CURRENT_VERSION | awk -F'[.-]' '{$3++; print $1"."$2"."$3"-"$4}')
          else
            # Increment $3 if it doesn't have '-SNAPSHOT'
            INCREMENTED_VERSION=$(echo $CURRENT_VERSION | awk -F'.' '{$3++; print $1"."$2"."$3}')
          fi

          echo "New Version: $INCREMENTED_VERSION"

          # Update the build.gradle file with the new version
          awk -F'=' -v OFS='=' '/APPLICATION_VERSION/ {
            split($2, version_parts, /[-.]/);
            version_parts[length(version_parts)-1]++;
            new_version = version_parts[1] "." version_parts[2] "." version_parts[3];
            if (length(version_parts) > 3) { new_version = new_version "-SNAPSHOT"; }
            print $1, new_version;
            next
            } 1' env.properties > temp.properties && mv temp.properties env.properties

      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/BillyBolton/springharvest.git
          git add env.properties
          git commit -m "Bump version to $INCREMENTED_VERSION"
          git push
