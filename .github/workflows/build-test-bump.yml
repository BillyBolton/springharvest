name: Build, Test, and Bump Version

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: 21
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Identity if Last Commit is Version Bump
        id: check_commit
        run: |
          latest_commit_message=$(git log -1 --pretty=format:"%s")
          if [[ $latest_commit_message == "Bump version to"* ]]; then
            echo "::set-output name=match::true"
          else
            echo "::set-output name=match::false"
          fi

      - name: Build
        id: build
        run: |
          ./gradlew build -x test

      - name: Test and Upload Coverage
        id: sonar-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_ORGANIZATION: ${{ vars.SONAR_ORGANIZATION }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar

      - name: Publish Test Report Annotations
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          check_name: JUnit Test Report Annotations
          report_paths: "**/build/test-results/test/TEST-*.xml"

  bump_version:
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: 21
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Identity if Last Commit is Version Bump
        id: check_commit
        run: |
          latest_commit_message=$(git log -1 --pretty=format:"%s")
          if [[ $latest_commit_message == "Bump version to"* ]]; then
            echo "::set-output name=match::true"
          else
            echo "::set-output name=match::false"
          fi

      - name: Validate Gradle wrapper
        if: steps.check_commit.outputs.match == 'false'
        uses: gradle/wrapper-validation-action@63d15e7a1e697b1de6f3ba0507106f89100c8518

      - name: Get Current Version
        id: get_version
        if: steps.check_commit.outputs.match == 'false'
        run: |
          CURRENT_VERSION=$(grep "APPLICATION_VERSION" env.properties | cut -d'=' -f2)
          echo "Current version is $CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Update Version
        if: steps.check_commit.outputs.match == 'false'
        run: |
          # Logic to calculate new version based on the current version
          if [[ "${{ env.CURRENT_VERSION }}" == *"-SNAPSHOT" ]]; then
            INCREMENTED_VERSION=$(echo "${{ env.CURRENT_VERSION }}" | awk -F'[.-]' '{$3++; print $1"."$2"."$3"-"$4}')
          else
            INCREMENTED_VERSION=$(echo "${{ env.CURRENT_VERSION }}" | awk -F'.' '{$3++; print $1"."$2"."$3}')
          fi

          echo "New Version: $INCREMENTED_VERSION"
          echo "NEW_VERSION=$INCREMENTED_VERSION" >> $GITHUB_ENV

          # Update the build.gradle file with the new version
          awk -F'=' -v OFS='=' '/APPLICATION_VERSION/ {
            split($2, version_parts, /[-.]/);
            version_parts[length(version_parts)-1]++;
            new_version = version_parts[1] "." version_parts[2] "." version_parts[3];
            if (length(version_parts) > 3) { new_version = new_version "-SNAPSHOT"; }
            print $1, new_version;
            next
            } 1' env.properties > temp.properties && mv temp.properties env.properties

      - name: Commit and Push Changes
        if: steps.check_commit.outputs.match == 'false'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/BillyBolton/springharvest.git
          git add env.properties
          git commit -m "Bump version to ${{env.NEW_VERSION}}"
          git push

      - name: Identity if Last Commit is Version Bump
        id: verify_bump_commit_message
        run: |
          latest_commit_message=$(git log -1 --pretty=format:"%s")
          if [[ $latest_commit_message == "Bump version to"* ]]; then
            echo "is_bump=true" >> $GITHUB_OUTPUT
          else
            echo "is_bump=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish package
        if: steps.verify_bump_commit_message.outputs.is_bump == 'true'
        uses: gradle/gradle-build-action@585b565652cefbba63202a7f927df0ff99f34001
        with:
          arguments: publish -PcommitSHA=${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_PACKAGE_TOKEN }}
