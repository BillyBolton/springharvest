plugins {
}

Properties env = new Properties()
File subPropertiesFile = new File("$projectDir/env.properties")
subPropertiesFile.withInputStream {
    env.load(it)
}

def profiles = (project.hasProperty('profiles')
        ? project.property('profiles')
        : env.DEFAULT_LOCAL_SPRING_PROFILES).split(",")

dependencies {
    implementation project(':components:crud')
    implementation project(':common')
    implementation project(':errors')

    if (profiles.contains("postgres")) {
        runtimeOnly 'org.postgresql:postgresql'
        testImplementation "org.testcontainers:postgresql"
    }

    if (profiles.contains("liquibase")) {
        implementation 'org.liquibase:liquibase-core'
    }

}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    args = ["--spring.profiles.active=${profiles.join(",")}"]
}