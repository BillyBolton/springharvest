type Query {
    authors: [Author]
    authorById(id: ID!): Author
}

type Author {
    id: ID!
    name: String!
    createdBy: ID
    updatedBy: ID
}

"""type Mutation{
    changeName(newName: String): Author
}

mutation mutationWithTwoFields {
    first: changeName(newName: "Bradley"){
        name
    }
    second: changeName(newName: "Brad"){
        id
        name
        updatedBy
    }
}

query authorsDetails{
    authors{
        name
    }
}"""

schema {
    query: Query
    #mutation: Mutation
}